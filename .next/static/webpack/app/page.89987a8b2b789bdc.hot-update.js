"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/api/crud.js":
/*!*************************!*\
  !*** ./app/api/crud.js ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchTableMembersDetailsById: function() { return /* binding */ FetchTableMembersDetailsById; },\n/* harmony export */   UserImageUpload: function() { return /* binding */ UserImageUpload; },\n/* harmony export */   acceptedFriendListByMainId: function() { return /* binding */ acceptedFriendListByMainId; },\n/* harmony export */   addFriend: function() { return /* binding */ addFriend; },\n/* harmony export */   addTableMember: function() { return /* binding */ addTableMember; },\n/* harmony export */   createCourse: function() { return /* binding */ createCourse; },\n/* harmony export */   createCourseSectionBinding: function() { return /* binding */ createCourseSectionBinding; },\n/* harmony export */   createSection: function() { return /* binding */ createSection; },\n/* harmony export */   createStudentCourseSectionBinding: function() { return /* binding */ createStudentCourseSectionBinding; },\n/* harmony export */   createTable: function() { return /* binding */ createTable; },\n/* harmony export */   createUniversity: function() { return /* binding */ createUniversity; },\n/* harmony export */   createUser: function() { return /* binding */ createUser; },\n/* harmony export */   deleteCourse: function() { return /* binding */ deleteCourse; },\n/* harmony export */   deleteSection: function() { return /* binding */ deleteSection; },\n/* harmony export */   deleteUniversity: function() { return /* binding */ deleteUniversity; },\n/* harmony export */   fetchAllCourseSectionDetails: function() { return /* binding */ fetchAllCourseSectionDetails; },\n/* harmony export */   fetchAllStudentCourseSectionDetails: function() { return /* binding */ fetchAllStudentCourseSectionDetails; },\n/* harmony export */   fetchAllTable: function() { return /* binding */ fetchAllTable; },\n/* harmony export */   fetchAllTableDetails: function() { return /* binding */ fetchAllTableDetails; },\n/* harmony export */   fetchAllUserSetupByUserId: function() { return /* binding */ fetchAllUserSetupByUserId; },\n/* harmony export */   fetchCourse: function() { return /* binding */ fetchCourse; },\n/* harmony export */   fetchCourseById: function() { return /* binding */ fetchCourseById; },\n/* harmony export */   fetchCourseSectionDetailsById: function() { return /* binding */ fetchCourseSectionDetailsById; },\n/* harmony export */   fetchNotifications: function() { return /* binding */ fetchNotifications; },\n/* harmony export */   fetchSection: function() { return /* binding */ fetchSection; },\n/* harmony export */   fetchSectionById: function() { return /* binding */ fetchSectionById; },\n/* harmony export */   fetchStudentCourseSectionDetailsById: function() { return /* binding */ fetchStudentCourseSectionDetailsById; },\n/* harmony export */   fetchTableById: function() { return /* binding */ fetchTableById; },\n/* harmony export */   fetchUniversity: function() { return /* binding */ fetchUniversity; },\n/* harmony export */   fetchUniversityById: function() { return /* binding */ fetchUniversityById; },\n/* harmony export */   fetchUserProfileById: function() { return /* binding */ fetchUserProfileById; },\n/* harmony export */   pendingFriendListByMainId: function() { return /* binding */ pendingFriendListByMainId; },\n/* harmony export */   removeTableMember: function() { return /* binding */ removeTableMember; },\n/* harmony export */   saveUserProfile: function() { return /* binding */ saveUserProfile; },\n/* harmony export */   suggestedPersonListByMainId: function() { return /* binding */ suggestedPersonListByMainId; },\n/* harmony export */   updateCourse: function() { return /* binding */ updateCourse; },\n/* harmony export */   updateCourseSection: function() { return /* binding */ updateCourseSection; },\n/* harmony export */   updateFriendRequest: function() { return /* binding */ updateFriendRequest; },\n/* harmony export */   updateSection: function() { return /* binding */ updateSection; },\n/* harmony export */   updateTable: function() { return /* binding */ updateTable; },\n/* harmony export */   updateTableLastTime: function() { return /* binding */ updateTableLastTime; },\n/* harmony export */   updateUniversity: function() { return /* binding */ updateUniversity; }\n/* harmony export */ });\n/* harmony import */ var _utils_route__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/route */ \"(app-pages-browser)/./utils/route.js\");\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-toastify */ \"(app-pages-browser)/./node_modules/react-toastify/dist/react-toastify.esm.mjs\");\n/* harmony import */ var cookies_next__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cookies-next */ \"(app-pages-browser)/./node_modules/cookies-next/lib/index.js\");\n/* harmony import */ var cookies_next__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(cookies_next__WEBPACK_IMPORTED_MODULE_2__);\n\n\n // Import cookies-next to retrieve the token\nconst { default: axios } = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/dist/browser/axios.cjs\");\nconst API_BASE_URL = \"http://software.mediasoftbd.com:3232/api\";\n// Axios instance with Bearer token\nconst apiClient = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n// Interceptor to add Bearer token to all requests\napiClient.interceptors.request.use((config)=>{\n    const token = (0,cookies_next__WEBPACK_IMPORTED_MODULE_2__.getCookie)(\"token\"); // Get the token from cookies\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token); // Attach token to headers\n    }\n    return config;\n}, (error)=>{\n    return Promise.reject(error);\n});\n//==================== CRUD FOR UNIVERSITY ====================\nconst fetchUniversity = async ()=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetAllUniversity);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst fetchUniversityById = async (id)=>{\n    try {\n        const response = await apiClient.get(\"\".concat(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetUniversityById, \"/\").concat(id));\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst createUniversity = async (data)=>{\n    try {\n        const response = await apiClient.post(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.CreateUniversity, data);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"University created successfully!\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error creating the university.\");\n        throw error;\n    }\n};\nconst updateUniversity = async (id, itemData)=>{\n    try {\n        const response = await apiClient.put(\"\".concat(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.UpdateUniversity, \"/\").concat(id), itemData);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"University updated successfully!\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error updating the university.\");\n        throw error;\n    }\n};\nconst deleteUniversity = async (id)=>{\n    try {\n        await apiClient.delete(\"\".concat(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.DeleteUniversity, \"/\").concat(id));\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"University deleted successfully!\");\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error deleting the university.\");\n        throw error;\n    }\n};\n//==================== CRUD FOR SECTIONS ====================\nconst fetchSection = async ()=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetAllSection);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst fetchSectionById = async (id)=>{\n    try {\n        const response = await apiClient.get(\"\".concat(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetSectionById, \"/\").concat(id));\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst createSection = async (data)=>{\n    try {\n        const response = await apiClient.post(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.CreateSection, data);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Section created successfully!\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error creating the section.\");\n        throw error;\n    }\n};\nconst updateSection = async (id, itemData)=>{\n    try {\n        const response = await apiClient.put(\"\".concat(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.UpdateSection, \"/\").concat(id), itemData);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Section updated successfully!\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error updating the section.\");\n        throw error;\n    }\n};\nconst deleteSection = async (id)=>{\n    try {\n        await apiClient.delete(\"\".concat(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.DeleteSection, \"/\").concat(id));\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Section deleted successfully!\");\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error deleting the section.\");\n        throw error;\n    }\n};\n//==================== CRUD FOR COURSE ====================\nconst fetchCourse = async ()=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetAllCourse);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst fetchCourseById = async (id)=>{\n    try {\n        const response = await apiClient.get(\"\".concat(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetCourseById, \"/\").concat(id));\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst createCourse = async (data)=>{\n    try {\n        const response = await apiClient.post(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.CreateCourse, data);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Course created successfully!\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error creating the course.\");\n        throw error;\n    }\n};\nconst updateCourse = async (id, data)=>{\n    try {\n        const response = await apiClient.put(\"\".concat(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.UpdateCourse, \"/\").concat(id), data);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Course updated successfully!\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error updating the course.\");\n        throw error;\n    }\n};\nconst deleteCourse = async (id)=>{\n    try {\n        await apiClient.delete(\"\".concat(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.DeleteCourse, \"/\").concat(id));\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Course deleted successfully!\");\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error deleting the course.\");\n        throw error;\n    }\n};\n// //==================== CRUD FOR COURSE SECTION MAPPING ====================\n// export const fetchGetAllCourseSectionMapping = async () => {\n//   try {\n//     const response = await apiClient.get(routes.GetAllCourseSectionMapping);\n//     return response.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n// export const createCourseSectionMapping = async (data) => {\n//   try {\n//     const response = await apiClient.post(routes.saveCourseSectionMapping, data);\n//     toast.success('Section created successfully!');\n//     return response.data;\n//   } catch (error) {\n//     toast.error('Error creating the section.');\n//     throw error;\n//   }\n// };\n// export const updateCourseSectionData = async (id, data) => {\n//   try {\n//     const response = await apiClient.put(`${routes.updateCourseSectionData}/${id}`, data);\n//     toast.success('Section updated successfully!');\n//     return response.data;\n//   } catch (error) {\n//     toast.error('Error updating the section.');\n//     throw error;\n//   }\n// };\n//==================== CRUD FOR COURSE SECTION DETAILS ====================\nconst fetchAllCourseSectionDetails = async ()=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetAllCourseSectionDetails);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst fetchCourseSectionDetailsById = async (id)=>{\n    try {\n        const response = await apiClient.get(\"\".concat(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetCourseSectionDetailsById, \"/\").concat(id));\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst createCourseSectionBinding = async (data)=>{\n    try {\n        const response = await apiClient.post(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.saveCourseSectionBinding, data);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Successfully Binding Course Section\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error Binding the course section.\");\n        throw error;\n    }\n};\nconst updateCourseSection = async (id, data)=>{\n    try {\n        const response = await apiClient.put(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.updateCourseSectionBinding + \"/\" + id, data);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Successfully Updatd Course Section Binding\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error Course Section Binding\");\n        throw error;\n    }\n};\n//==================== CRUD FOR STUDENT COURSE SECTION DETAILS ====================\nconst fetchAllStudentCourseSectionDetails = async ()=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetAllStudentCourseSectionDetails);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst fetchStudentCourseSectionDetailsById = async (id)=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetStudentCourseSectionBindingDetailsById + \"/\" + id);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst createStudentCourseSectionBinding = async (data)=>{\n    try {\n        const response = await apiClient.post(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.SaveStudentCourseSectionBinding, data);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Student Course Section Binding successfully\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error Student Course Section Binding.\");\n        console.log(error);\n        throw error;\n    }\n};\n//==================== CRUD FOR USER REGISTRATION ====================\nconst createUser = async (data)=>{\n    try {\n        const response = await apiClient.post(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.CreateUser, data);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Successfully Registered\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error creating the course.\");\n        throw error;\n    }\n};\n//==================== CRUD FOR USER PROFILE SETUP ====================\nconst fetchUserProfileById = async (id)=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetUserProfileById + id);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst saveUserProfile = async (data)=>{\n    try {\n        const response = await apiClient.post(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.SaveUserProfile, data);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Profile saved successfully\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error creating the course.\");\n        console.log(error);\n        throw error;\n    }\n};\nconst UserImageUpload = async (userID, imageFile)=>{\n    // Prepare form data for the image upload\n    const formData = new FormData();\n    formData.append(\"image\", imageFile);\n    try {\n        const response = await apiClient.put(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.UpdateProfilePicture + userID, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Successfully Registered\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error creating the course.\");\n        throw error;\n    }\n};\n_c = UserImageUpload;\n//==================== CRUD FOR USER SETUP ====================\nconst fetchAllUserSetupByUserId = async (id)=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetAllUserSetupByUserId + \"/\" + id);\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n//==================== CRUD FOR TABLE ====================\nconst fetchAllTable = async ()=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetAllTable);\n        return response === null || response === void 0 ? void 0 : response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst fetchTableById = async (id)=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetTableByRoomId + \"/\" + id);\n        return response === null || response === void 0 ? void 0 : response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst fetchAllTableDetails = async ()=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetAllTableDetails);\n        return response === null || response === void 0 ? void 0 : response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst createTable = async (data)=>{\n    try {\n        const response = await apiClient.post(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.SaveTableInformation, data);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Table Created successfully\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error creating table.\");\n        console.log(error);\n        throw error;\n    }\n};\nconst updateTable = async (id, data)=>{\n    try {\n        const response = await apiClient.put(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.UpdateTableInformation + \"/\" + id, data);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Table Updated successfully\");\n        return response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error update table.\");\n        console.log(error);\n        throw error;\n    }\n};\n//==================== TABLE ACTIVE STATUS ====================\nconst updateTableLastTime = async (id)=>{\n    try {\n        const response = await apiClient.put(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.UpdateTableLastActiveTimeStatus + \"/\" + id);\n        // toast.success('Table Time Updated successfully');\n        return response;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error update table time status.\");\n        console.log(error);\n        throw error;\n    }\n};\n//==================== CRUD FOR TABLE MEMBER ====================\nconst FetchTableMembersDetailsById = async (id)=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetTableMembersDetailsById + \"/\" + id);\n        return response === null || response === void 0 ? void 0 : response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n_c1 = FetchTableMembersDetailsById;\nconst addTableMember = async (data)=>{\n    try {\n        const response = await apiClient.post(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.AddTableMember, data);\n        return response === null || response === void 0 ? void 0 : response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst removeTableMember = async (memberId, roomId)=>{\n    try {\n        await apiClient.delete(\"\".concat(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.RemoveTableMember, \"/\").concat(memberId, \"/\").concat(roomId));\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Successfully Left the table!\");\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error Left the table\");\n        throw error;\n    }\n};\n//==================== CRUD FOR FRIEND ====================\nconst addFriend = async (data)=>{\n    try {\n        const response = await apiClient.post(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.AddFriend, data);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Successfully friend Request Sent\");\n        return response === null || response === void 0 ? void 0 : response.data;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Error Sending friend Request\");\n        throw error;\n    }\n};\nconst pendingFriendListByMainId = async (id)=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetPendingFriendListByMainId + \"/\" + id);\n        return response === null || response === void 0 ? void 0 : response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst suggestedPersonListByMainId = async (id)=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetSuggestPersonListByMainId + \"/\" + id);\n        return response === null || response === void 0 ? void 0 : response.data;\n    } catch (error) {\n        throw error;\n    }\n};\nconst updateFriendRequest = async (mainPersonId, friendId, status)=>{\n    try {\n        const response = await apiClient.put(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.UpdateFriendRequest + \"/\" + mainPersonId + \"/\" + friendId + \"/\" + status);\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"You have \".concat(status, \" \").concat(friendId, \"'s friend Request\"));\n        return response;\n    } catch (error) {\n        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Error update friend Request\");\n        console.log(error);\n        throw error;\n    }\n};\nconst acceptedFriendListByMainId = async (id)=>{\n    try {\n        const response = await apiClient.get(_utils_route__WEBPACK_IMPORTED_MODULE_0__.routes.GetAcceptedFriendListByMainId + \"/\" + id);\n        return response === null || response === void 0 ? void 0 : response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n//==================== NOTIFICATION ====================\nconst fetchNotifications = async ()=>{\n    try {} catch (error) {}\n};\nvar _c, _c1;\n$RefreshReg$(_c, \"UserImageUpload\");\n$RefreshReg$(_c1, \"FetchTableMembersDetailsById\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/api/crud.js\n"));

/***/ })

});